version: "3.9"

services:
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      fluentd:
        condition: service_healthy
    ports:
      - "${AUTH_APP_PORT}:8000"
    

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}        
      POSTGRES_USER: ${POSTGRES_USER}    
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --username ${MONGO_INITDB_ROOT_USERNAME} --password ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval 'db.adminCommand({ ping: 1 })' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: fluentd
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./fluentd/etc:/fluentd/etc:ro
    command: fluentd -c /fluentd/etc/fluent.conf -v
    ports:
      - "${FLUENTD_PORT}:24224"
      - "${FLUENTD_PORT}:24224/udp"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f fluentd || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  postgres_data:
  mongo_data:
